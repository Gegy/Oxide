buildscript {
  repositories {
    jcenter()
    maven {
      name = "forge"
      url = "http://files.minecraftforge.net/maven"
    }
    maven {
      url = "https://maven.gegy1000.net"
    }
  }
  dependencies {
    classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    classpath "net.gegy1000.oxide:oxide-gradle:0.1.0-SNAPSHOT"
  }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "net.gegy1000.oxide.oxide-gradle"

def mod_file = getModFile()
version = getModField("VERSION", mod_file)
group = "net.gegy1000"
archivesBaseName = "oxide"
sourceCompatibility = targetCompatibility = "1.8"

def core_plugin = "net.gegy1000.oxide.core.OxideCorePlugin"

minecraft {
  version = "1.12.2-14.23.4.2756"
  runDir = "minecraft"
  mappings = "stable_39"

  clientJvmArgs = ["-Dfml.coreMods.load=$core_plugin"]
  serverJvmArgs = ["-Dfml.coreMods.load=$core_plugin"]
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
}

sourceSets {
  example {
    java
  }
}

jar {
  manifest {
    attributes "FMLCorePlugin": core_plugin
    attributes "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}"
    attributes "Timestamp": System.currentTimeMillis()
  }
}

processResources {
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version

  from(sourceSets.main.resources.srcDirs) {
    include "mcmod.info"
    expand "version": project.version, "mcversion": project.minecraft.version
  }

  from(sourceSets.main.resources.srcDirs) {
    exclude "mcmod.info"
  }
}

String getModFile() {
  String path = ""
  FileTree tree = fileTree(dir: 'src/main/java')
  tree.include '**/*.java'
  tree.visit { element ->
    if (element.file.isFile()) {
      element.file.eachLine { String s ->
        s = s.trim()
        if (s.startsWith("@Mod")) {
          path = "src/main/java/$element.relativePath"
        }
      }
    }
  }
  return path
}

String getModField(String type, String mod_file) {
  if (mod_file.length() == 0) {
    return ""
  }
  String field = ""
  String prefix = "public static final String $type = \""
  File file = file(mod_file)
  file.eachLine { String s ->
    s = s.trim()
    if (s.startsWith(prefix)) {
      s = s.substring(prefix.length(), s.length() - 2)
      field = s
    }
  }
  return field
}
